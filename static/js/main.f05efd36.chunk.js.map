{"version":3,"sources":["redux/mainSlice.js","keyboard/util.js","hooks/useOnClickOutside.js","Components/PopupMenu.js","Components/CellPopupMenu.js","Components/Cell.js","Components/Button.js","Components/SectionButton.js","Icons/GearIcon.js","Components/SettingInput.js","Components/TaikoGridSettings.js","Components/SectionSettings.js","Components/Section.js","redux/store.js","Components/Header.js","Components/TaikoGrid.js","Components/PageContainer.js","App.js","serviceWorker.js","index.js"],"names":["name","useSettings","sectionIndex","useSelector","state","sections","settings","shallowEqual","useSoundObj","soundObj","getNewSection","index","cells","id","sectionName","totalLines","mainSlice","createSlice","initialState","sound","intensity","cellsPerLine","divideEvery","sounds","don","kon","ka","do","ko","ro","su","tsu","ku","kara","ra","doko","reducers","clearState","action","setSettings","payload","sectionId","Object","keys","forEach","key","fromEntries","split","map","s","trim","setTotalLines","final","Math","max","slice","setSectionName","setSound","cellIndex","cell","setIntensity","setMainState","addSection","push","length","removeLastSection","pop","actions","setCellsPerLine","setDivideEvery","setSounds","onEnter","callback","e","onSpace","useEffect","require","PopupMenu","open","onOpenChange","className","style","children","left","top","ref","useRef","useState","actualPosition","setActualPosition","onClickOutside","useCallback","stopPropagation","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","undefined","maxLeft","window","innerWidth","clientWidth","maxTop","innerHeight","clientHeight","usedLeft","min","usedTop","visibleClass","preventAndStop","preventDefault","onClick","onKeyPress","role","defaultProps","CellPopupMenu","menuCoordinates","tooltipColumns","ceil","dispatch","useDispatch","firstCellRef","setTimeout","focus","console","debug","values","tabIndex","memo","Cell","props","isPlaying","isStartingCell","isFirstCellInLine","showMenu","setShowMenu","setMenuCoordinates","newIsOpen","useCell","currentSound","backgroundClass","borderClass","clientX","clientY","getBoundingClientRect","x","y","onContextMenu","toLocaleUpperCase","Button","rest","type","SectionButton","GearIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","SettingInput","htmlFor","numerators","Array","TaikoGridSettings","onFormChange","value","usedValue","dataType","Number","onChange","SectionSettings","Section","sectionSettingsOpen","setSectionSettingsOpen","section","sectionCells","numCells","sectionSettingsLeft","setSectionSettingsLeft","sectionSettingsTop","setSectionSettingsTop","mobileDisplayedCells","floor","isOpen","configureStoreOptions","reducer","mainName","mainReducer","store","configureStore","localStorageKey","saveMainToLocal","getState","localStorage","setItem","JSON","stringify","Header","src","process","alt","getItem","parse","getMainFromLocal","TaikoGrid","sectionsIds","PageContainer","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8LAIaA,EAAO,OAyZPC,EAAc,SAACC,GAAD,OACzBC,aACE,SAACC,GAAD,OAAWA,EAAK,KAAOC,SAASH,GAAcI,WAC9CC,MAGSC,EAAc,SAACN,GAAD,OACzBC,aACE,SAACC,GAAD,OAAWA,EAAK,KAAOC,SAASH,GAAcI,SAASG,WACvDF,MA+BEG,EAAgB,eAACC,EAAD,uDAAS,EAAT,MAAgB,CACpCC,MAAO,GACPC,GAAIF,EACJG,YAAY,QAAD,OAAUH,GACrBI,WAAY,IAGDC,EAAYC,YAAY,CACnCjB,OACAkB,aAxc0B,CAC1Bb,SAAU,CACR,CACEO,MAAO,CACL,CACEO,MAAO,OAET,KACA,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,OAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,KACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,QAET,CACEA,MAAO,OACPC,UAAW,GAEb,CACED,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,KACA,CACED,MAAO,MACPC,UAAW,IAGfP,GAAI,EACJC,YAAa,SACbC,WAAY,EACZT,SAAU,CACRe,aAAc,GACdC,YAAa,EACbC,OAAQ,uDACRd,SAAU,CACR,GAAI,GACJe,IAAK,MACLC,IAAK,MACLC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,KAAM,UAIZ,CACEvB,MAAO,CACL,CACEO,MAAO,OAET,KACA,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,OAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,KACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,QAET,CACEA,MAAO,OACPC,UAAW,GAEb,CACED,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,MAET,CAC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","file":"static/js/main.f05efd36.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nexport const name = \"main\";\n\nexport const initialState = {\n  sections: [\n    {\n      cells: [\n        {\n          sound: \"don\",\n        },\n        null,\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ro\",\n        },\n        {\n          sound: \"tsu\",\n        },\n        {\n          sound: \"ku\",\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"ra\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"doko\",\n        },\n        {\n          sound: \"kara\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n      ],\n      id: 1,\n      sectionName: \"Line 1\",\n      totalLines: 4,\n      settings: {\n        cellsPerLine: 16,\n        divideEvery: 2,\n        sounds: \"don, kon, ka, do, ko, ro, su, tsu,ku, kara, ra, doko\",\n        soundObj: {\n          \"\": \"\",\n          don: \"don\",\n          kon: \"kon\",\n          ka: \"ka\",\n          do: \"do\",\n          ko: \"ko\",\n          ro: \"ro\",\n          su: \"su\",\n          tsu: \"tsu\",\n          ku: \"ku\",\n          kara: \"kara\",\n          ra: \"ra\",\n          doko: \"doko\",\n        },\n      },\n    },\n    {\n      cells: [\n        {\n          sound: \"don\",\n        },\n        null,\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ro\",\n        },\n        {\n          sound: \"tsu\",\n        },\n        {\n          sound: \"ku\",\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"ra\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"doko\",\n        },\n        {\n          sound: \"kara\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n      ],\n      id: 2,\n      sectionName: \"Line 2\",\n      totalLines: 4,\n      settings: {\n        cellsPerLine: 4,\n        divideEvery: 2,\n        sounds: \"don, kon, ka\",\n        soundObj: {\n          \"\": \"\",\n          don: \"don\",\n          kon: \"kon\",\n          ka: \"ka\",\n        },\n      },\n    },\n  ],\n};\nexport const useSettings = (sectionIndex) =>\n  useSelector(\n    (state) => state[name].sections[sectionIndex].settings,\n    shallowEqual\n  );\n\nexport const useSoundObj = (sectionIndex) =>\n  useSelector(\n    (state) => state[name].sections[sectionIndex].settings.soundObj,\n    shallowEqual\n  );\n\nexport const useSections = () =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections;\n  }, shallowEqual);\n\nexport const useSectionIds = () =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections.map((s) => s.id);\n  }, shallowEqual);\n\nexport const useSectionNoCells = (index) =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    const section = {\n      ...sections[index],\n    };\n    delete section.cells;\n    return section;\n  }, shallowEqual);\n\nexport const useCell = (sectionIndex, cellIndex) =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections[sectionIndex].cells[cellIndex] || {};\n  }, shallowEqual);\n\nconst getNewSection = (index = 0) => ({\n  cells: [],\n  id: index,\n  sectionName: `Line ${index}`,\n  totalLines: 1,\n});\n\nexport const mainSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    clearState: (state, action) => {\n      state.sections = [getNewSection()];\n    },\n    setSettings: (state, action) => {\n      const { sectionId, settings } = action.payload;\n      Object.keys(settings).forEach((key) => {\n        state.sections[sectionId].settings[key] = settings[key];\n      });\n      state.sections[sectionId].settings.soundObj = Object.fromEntries(\n        `,${state.sections[sectionId].settings.sounds}`\n          .split(\",\")\n          .map((s) => [s.trim(), s.trim()])\n      );\n      // Erase sounds that don't match\n      // state.sections.forEach((section) => {\n      //   section.cells.forEach((cell) => {\n      //     if (cell) {\n      //       cell.sound = state.settings.soundObj[cell.sound] ? cell.sound : \"\";\n      //     }\n      //   });\n      // });\n    },\n    setTotalLines: (state, action) => {\n      const { sectionIndex, totalLines } = action.payload;\n      const final = Math.max(totalLines, 1);\n      const { cellsPerLine } = state.sections[sectionIndex].settings;\n      state.sections[sectionIndex].totalLines = final;\n      state.sections[sectionIndex].cells = state.sections[\n        sectionIndex\n      ].cells.slice(0, final * cellsPerLine);\n    },\n    setSectionName: (state, action) => {\n      const { sectionIndex, sectionName } = action.payload;\n      state.sections[sectionIndex].sectionName = sectionName;\n    },\n    setSound: (state, action) => {\n      const { sectionIndex, cellIndex, sound } = action.payload;\n      const section = state.sections[sectionIndex];\n      const cell = section.cells[cellIndex] || {};\n      cell.sound = sound;\n      state.sections[sectionIndex].cells[cellIndex] = cell;\n    },\n    setIntensity: (state, action) => {\n      const { sectionIndex, cellIndex, intensity } = action.payload;\n      const section = state.sections[sectionIndex];\n      const cell = section.cells[cellIndex] || {};\n      cell.intensity = intensity;\n      state.sections[sectionIndex].cells[cellIndex] = cell;\n    },\n    setMainState: (state, action) => action.payload,\n    addSection: (state, action) => {\n      state.sections.push(getNewSection(state.sections.length + 1));\n    },\n    removeLastSection: (state, action) => {\n      state.sections.pop();\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCellsPerLine,\n  setDivideEvery,\n  setTotalLines,\n  setSectionName,\n  setSounds,\n  setSettings,\n  setSound,\n  setIntensity,\n  setMainState,\n  addSection,\n  removeLastSection,\n  clearState,\n} = mainSlice.actions;\n\nexport default mainSlice.reducer;\n","export function onEnter(callback) {\n  return (e) => {\n    if (e.key === \"Enter\") {\n      callback(e);\n    }\n  };\n}\n\nexport function onSpace(callback) {\n  return (e) => {\n    if (e.key === \" \") {\n      callback(e);\n    }\n  };\n}\n","const { useEffect } = require(\"react\");\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    document.addEventListener(\"keypress\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n      document.removeEventListener(\"keypress\", listener);\n    };\n  }, [ref, handler]);\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useOnClickOutside from \"../hooks/useOnClickOutside\";\nimport { onEnter } from \"../keyboard/util\";\n\nconst PopupMenu = ({\n  open,\n  onOpenChange,\n  className,\n  style,\n  children,\n  left,\n  top,\n}) => {\n  const ref = useRef();\n  const [actualPosition, setActualPosition] = useState();\n  const onClickOutside = useCallback(\n    (e) => {\n      if (open) {\n        onOpenChange(false);\n        e.stopPropagation();\n      }\n    },\n    [open, onOpenChange]\n  );\n  useOnClickOutside(ref, onClickOutside);\n\n  useEffect(() => {\n    if (ref.current && left !== undefined && top !== undefined) {\n      const minLeft = 10;\n      const minTop = 10;\n      const maxLeft = window.innerWidth - ref.current.clientWidth;\n      const maxTop = window.innerHeight - ref.current.clientHeight;\n      const usedLeft = Math.max(Math.min(left, maxLeft), minLeft);\n      const usedTop = Math.max(Math.min(top, maxTop), minTop);\n      setActualPosition({ left: usedLeft, top: usedTop });\n    } else {\n      setActualPosition(null);\n    }\n  }, [left, open, top]);\n\n  const visibleClass = actualPosition ? \"\" : \"invisible\";\n  const preventAndStop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  return (\n    open && (\n      <div\n        ref={ref}\n        className={`popupmenu ${visibleClass} ${className}`}\n        style={{ ...style, ...(actualPosition || {}) }}\n        onClick={preventAndStop}\n        onKeyPress={onEnter(preventAndStop)}\n        role=\"none\"\n      >\n        {children}\n      </div>\n    )\n  );\n};\n\nPopupMenu.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onOpenChange: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  left: PropTypes.number,\n  top: PropTypes.number,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n};\n\nPopupMenu.defaultProps = {\n  className: \"\",\n  style: null,\n  children: undefined,\n  left: undefined,\n  top: undefined,\n};\n\nexport default PopupMenu;\n","import React, { memo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { setSound, useSoundObj } from \"../redux/mainSlice\";\nimport { onEnter, onSpace } from \"../keyboard/util\";\nimport PopupMenu from \"./PopupMenu\";\n\nconst CellPopupMenu = ({\n  cellIndex,\n  open,\n  onOpenChange,\n  sectionIndex,\n  menuCoordinates,\n}) => {\n  const soundObj = useSoundObj(sectionIndex);\n  const tooltipColumns = Math.ceil(Object.keys(soundObj).length / 4);\n  const dispatch = useDispatch();\n  const firstCellRef = useRef();\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        if (firstCellRef.current) {\n          firstCellRef.current.focus();\n        }\n      }, 0);\n    }\n  }, [open]);\n\n  console.debug(\"CellPopupMenu rerender\");\n\n  return (\n    open && (\n      <PopupMenu\n        className={`grid grid-rows-4 grid-cols-${tooltipColumns} grid-flow-col w-max max-h-48`}\n        open={open}\n        onOpenChange={onOpenChange}\n        left={menuCoordinates[0]}\n        top={menuCoordinates[1]}\n      >\n        {Object.values(soundObj).map((sound, index) => {\n          const onClick = (e) => {\n            dispatch(\n              setSound({\n                cellIndex,\n                sectionIndex,\n                sound,\n              })\n            );\n            onOpenChange(false);\n          };\n\n          return (\n            <div\n              ref={index === 0 ? firstCellRef : null}\n              key={sound}\n              className=\"p-3 hover:bg-blue-200 \"\n              role=\"button\"\n              tabIndex={0}\n              onClick={onClick}\n              onKeyPress={(e) => {\n                onEnter(() => {\n                  onOpenChange(false);\n                })(e);\n                onSpace(onClick)(e);\n              }}\n            >\n              {sound}\n            </div>\n          );\n        })}\n      </PopupMenu>\n    )\n  );\n};\n\nCellPopupMenu.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onOpenChange: PropTypes.func.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  menuCoordinates: PropTypes.arrayOf(PropTypes.number),\n  sectionIndex: PropTypes.number.isRequired,\n};\n\nCellPopupMenu.defaultProps = { menuCoordinates: undefined };\n\nexport default memo(CellPopupMenu);\n","import React, { memo, useCallback, useRef, useState } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { setIntensity, useCell, useSoundObj } from \"../redux/mainSlice\";\nimport { onEnter, onSpace } from \"../keyboard/util\";\nimport CellPopupMenu from \"./CellPopupMenu\";\n\nconst Cell = (props) => {\n  const {\n    cellIndex,\n    sectionIndex,\n    isPlaying,\n    isStartingCell,\n    isFirstCellInLine,\n    cellsPerLine,\n  } = props;\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const soundObj = useSoundObj(sectionIndex);\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuCoordinates, setMenuCoordinates] = useState();\n  const onOpenChange = useCallback((newIsOpen) => {\n    setShowMenu(newIsOpen);\n    if (ref.current && !newIsOpen) {\n      ref.current.focus();\n    }\n  }, []);\n\n  const { sound: currentSound = 0, intensity } = useCell(\n    sectionIndex,\n    cellIndex\n  );\n  const sound = (currentSound && soundObj[currentSound]) || \"\";\n  let backgroundClass = \"bg-white hover:bg-blue-400\";\n  if (isPlaying) {\n    backgroundClass = \"bg-red-300 hover:bg-red-600\";\n  } else if (isStartingCell) {\n    backgroundClass = \"bg-gray-300 hover:bg-blue-400\";\n  }\n  let borderClass = \"border border-blue-800\";\n\n  // when we show fewer cells per line, help identify the start of every line\n  if (isFirstCellInLine && cellsPerLine % 2 === 1) {\n    borderClass = \"border-2 border-red-400 md:border md:border-blue-800\";\n  }\n\n  console.debug(`Cell rerender ${cellIndex}`);\n  const onClick = (e) => {\n    setShowMenu(!showMenu);\n    if (e.clientX && e.clientY) {\n      setMenuCoordinates([e.clientX, e.clientY]);\n    } else if (e.target) {\n      const { x, y } = e.target.getBoundingClientRect();\n      setMenuCoordinates([x, y]);\n    }\n    e.preventDefault();\n  };\n\n  const onContextMenu = (e) => {\n    dispatch(\n      setIntensity({\n        cellIndex,\n        sectionIndex,\n        intensity: intensity ? 0 : 1,\n      })\n    );\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      ref={ref}\n      className={`fadeBg flex flex-row justify-center items-center select-none h-10 cursor-pointer ${borderClass} ${backgroundClass}`}\n      role=\"button\"\n      tabIndex={0}\n      onContextMenu={onContextMenu}\n      onClick={onClick}\n      onKeyPress={(e) => {\n        onEnter(onContextMenu)(e);\n        onSpace(onClick)(e);\n      }}\n    >\n      {intensity ? sound.toLocaleUpperCase() : sound}\n      <CellPopupMenu\n        open={showMenu}\n        menuCoordinates={menuCoordinates}\n        onOpenChange={onOpenChange}\n        cellIndex={cellIndex}\n        sectionIndex={sectionIndex}\n      />\n    </div>\n  );\n};\n\nCell.propTypes = {\n  isStartingCell: PropTypes.bool.isRequired,\n  isFirstCellInLine: PropTypes.bool.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  cellsPerLine: PropTypes.number.isRequired,\n  isPlaying: PropTypes.bool,\n};\n\nCell.defaultProps = {\n  isPlaying: undefined,\n};\n\nexport default memo(Cell);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A component which will show a styled button\n */\nconst Button = ({ children, className, ...rest }) => (\n  <button\n    type=\"button\"\n    className={`p-3 bg-blue-100 text-gray-800 cursor-pointer hover:bg-blue-50 ${className}`}\n    {...rest}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nButton.defaultProps = {\n  className: undefined,\n  children: undefined,\n};\n\nexport default memo(Button);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst SectionButton = ({ children, onClick }) => (\n  <Button className=\"mr-2\" onClick={onClick}>\n    {children}\n  </Button>\n);\n\nSectionButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default memo(SectionButton);\n","import React from \"react\";\n\nexport default function GearIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n      />\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n      />\n    </svg>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const SettingInput = ({ children, id }) => (\n  <label\n    htmlFor={id}\n    className=\"flex flex-row justify-between items-end mt-3 first:mt-0\"\n  >\n    {children}\n  </label>\n);\n\nSettingInput.propTypes = {\n  id: PropTypes.string,\n  children: PropTypes.node,\n};\n\nSettingInput.defaultProps = {\n  id: undefined,\n  children: undefined,\n};\n\nexport default SettingInput;\n","import React, { memo, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setSettings, useSettings } from \"../redux/mainSlice\";\nimport { SettingInput } from \"./SettingInput\";\n\nconst numerators = [...Array(20).keys()].map((key) => key + 1);\n// export const denominators = [4, 8, 16];\n\nconst TaikoGridSettings = ({ sectionId }) => {\n  const settings = useSettings(sectionId);\n  const dispatch = useDispatch();\n  const { cellsPerLine = 16, divideEvery = 4, sounds = \"ka,don\" } = settings;\n\n  const onFormChange = useCallback(\n    (e) => {\n      const { name, value, dataType } = e.target;\n      const usedValue = dataType === \"number\" ? Number(value) : value;\n      dispatch(\n        setSettings({\n          sectionId,\n          settings: {\n            [name]: usedValue,\n          },\n        })\n      );\n    },\n    [dispatch, sectionId]\n  );\n\n  return (\n    <form className=\"flex flex-col \">\n      <SettingInput>\n        Cells Per Line\n        <select\n          id=\"cellsPerLine\"\n          name=\"cellsPerLine\"\n          className=\"p-2 \"\n          onChange={onFormChange}\n          value={cellsPerLine}\n          data-data-type=\"number\"\n        >\n          {numerators.map((key) => (\n            <option key={`cellsPerLine_${key}`} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </SettingInput>\n      <SettingInput>\n        Divide every\n        <select\n          id=\"divideEvery\"\n          name=\"divideEvery\"\n          className=\"p-2 \"\n          onChange={onFormChange}\n          value={divideEvery}\n          data-data-type=\"number\"\n        >\n          {numerators.map((key) => (\n            <option key={`defaultDivideEvery_${key}`} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </SettingInput>\n      <SettingInput id={sounds}>\n        Available Sounds\n        <input\n          id=\"sounds\"\n          name=\"sounds\"\n          className=\"border-black border p-1 ml-5\"\n          onChange={onFormChange}\n          value={sounds}\n        />\n      </SettingInput>\n    </form>\n  );\n};\n\nTaikoGridSettings.propTypes = {\n  sectionId: PropTypes.number.isRequired,\n};\n\nTaikoGridSettings.defaultProps = {};\n\nexport default memo(TaikoGridSettings);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PopupMenu from \"./PopupMenu\";\nimport TaikoGridSettings from \"./TaikoGridSettings\";\n\nconst SectionSettings = ({ sectionId, open, onOpenChange, left, top }) => (\n  <PopupMenu\n    open={open}\n    onOpenChange={onOpenChange}\n    left={left}\n    top={top}\n    className=\"grid grid-rows-1 grid-cols-1 w-max max-h-48 p-4\"\n  >\n    <TaikoGridSettings sectionId={sectionId} />\n  </PopupMenu>\n);\n\nSectionSettings.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onOpenChange: PropTypes.func.isRequired,\n  sectionId: PropTypes.number.isRequired,\n  left: PropTypes.number,\n  top: PropTypes.number,\n};\n\nSectionSettings.defaultProps = {\n  left: undefined,\n  top: undefined,\n};\n\nexport default SectionSettings;\n","import React, { memo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport Cell from \"./Cell\";\nimport {\n  setSectionName,\n  setTotalLines,\n  useSectionNoCells,\n  useSettings,\n} from \"../redux/mainSlice\";\nimport SectionButton from \"./SectionButton\";\nimport GearIcon from \"../Icons/GearIcon\";\nimport SectionSettings from \"./SectionSettings\";\n\nconst Section = (props) => {\n  const { sectionId } = props;\n  const { cellsPerLine, divideEvery } = useSettings(sectionId);\n  const [sectionSettingsOpen, setSectionSettingsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const section = useSectionNoCells(sectionId);\n  const { sectionName, totalLines, id } = section;\n  const sectionCells = [];\n  const numCells = cellsPerLine * totalLines;\n  const [sectionSettingsLeft, setSectionSettingsLeft] = useState();\n  const [sectionSettingsTop, setSectionSettingsTop] = useState();\n  const mobileDisplayedCells =\n    cellsPerLine > 7 ? Math.floor(cellsPerLine / 2) : cellsPerLine;\n  console.debug(`Section rerender ${sectionName} - ${id}`);\n  for (let cellIndex = 0; cellIndex < numCells; cellIndex++) {\n    sectionCells.push(\n      <Cell\n        key={`cell_${sectionId}_${cellIndex}`}\n        isStartingCell={cellIndex % divideEvery === 0}\n        isFirstCellInLine={cellIndex % cellsPerLine === 0}\n        cellsPerLine={cellsPerLine}\n        cellIndex={cellIndex}\n        sectionIndex={sectionId}\n      />\n    );\n  }\n  return (\n    <div key={`section_${sectionId}`} className=\"mb-8 p-1\">\n      <div className=\"flex flex-row align-baseline\">\n        <SectionButton\n          onClick={() => {\n            dispatch(\n              setTotalLines({\n                sectionIndex: sectionId,\n                totalLines: totalLines + 1,\n              })\n            );\n          }}\n        >\n          +\n        </SectionButton>\n\n        <SectionButton\n          onClick={() => {\n            dispatch(\n              setTotalLines({\n                sectionIndex: sectionId,\n                totalLines: totalLines - 1,\n              })\n            );\n          }}\n        >\n          -\n        </SectionButton>\n        <SectionButton\n          onClick={(e) => {\n            setSectionSettingsOpen(true);\n\n            if (e.clientX && e.clientY) {\n              setSectionSettingsLeft(e.clientX);\n              setSectionSettingsTop(e.clientY);\n            } else if (e.target) {\n              const { x, y } = e.target.getBoundingClientRect();\n              setSectionSettingsLeft(x);\n              setSectionSettingsTop(y);\n            }\n            e.preventDefault();\n            e.stopPropagation();\n          }}\n        >\n          <GearIcon />\n          <SectionSettings\n            sectionId={sectionId}\n            open={sectionSettingsOpen}\n            onOpenChange={(isOpen) => {\n              setSectionSettingsOpen(isOpen);\n            }}\n            left={sectionSettingsLeft}\n            top={sectionSettingsTop}\n          />\n        </SectionButton>\n        <input\n          type=\"text\"\n          value={sectionName}\n          className=\"text-2xl w-full outline-none\"\n          onChange={(e) => {\n            dispatch(\n              setSectionName({\n                sectionIndex: sectionId,\n                sectionName: e.target.value,\n              })\n            );\n          }}\n        />\n      </div>\n      <div\n        className={`bg-blue-500 grid grid-cols-${mobileDisplayedCells} md:grid-cols-${cellsPerLine} border border-blue-800`}\n      >\n        {sectionCells}\n      </div>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  sectionId: PropTypes.number,\n};\n\nSection.defaultProps = {\n  sectionId: undefined,\n};\nexport default memo(Section);\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport mainReducer, { name as mainName } from \"./mainSlice\";\n\nconst configureStoreOptions = {\n  reducer: {\n    [mainName]: mainReducer,\n  },\n};\n\nexport const store = configureStore(configureStoreOptions);\n\nexport const getMainState = () => store.getState()[mainName];\n\nconst localStorageKey = \"taikoNotesState\";\n\nexport const saveMainToLocal = () => {\n  const state = getMainState();\n  localStorage.setItem(localStorageKey, JSON.stringify(state));\n};\n\nexport const getMainFromLocal = () => {\n  const state = localStorage.getItem(localStorageKey);\n  if (state) {\n    return JSON.parse(state);\n  }\n  return null;\n};\n","import React, { memo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"./Button\";\nimport {\n  addSection,\n  clearState,\n  removeLastSection,\n  setMainState,\n} from \"../redux/mainSlice\";\nimport { getMainFromLocal, saveMainToLocal } from \"../redux/store\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"settings p-1 mt-3 mb-3 flex flex-col md:flex-row\">\n      <div className=\"w-full md:w-8/12 lg:w-6/12 grid logoGrid mr-3\">\n        <img\n          src={`${process.env.PUBLIC_URL}/favicon/Taiko.svg`}\n          className=\"w-full p-2\"\n          alt=\"taiko logo\"\n        />\n      </div>\n      <div className=\"w-full md:w-4/12 lg:w-6/12 flex flex-col justify-between\">\n        <div className=\"mt-2 md:mt-0 grid grid-rows-2 grid-flow-col gap-1\">\n          <Button\n            onClick={() => {\n              dispatch(addSection());\n            }}\n          >\n            Add Section\n          </Button>\n          <Button\n            onClick={() => {\n              dispatch(removeLastSection());\n            }}\n          >\n            Remove Last Section\n          </Button>\n          <Button\n            onClick={() => {\n              saveMainToLocal();\n            }}\n          >\n            Save\n          </Button>\n          <Button\n            onClick={() => {\n              const state = getMainFromLocal();\n              console.debug(\"entire state\", state);\n              dispatch(setMainState(state));\n            }}\n          >\n            Load\n          </Button>\n          <Button\n            onClick={() => {\n              dispatch(clearState());\n            }}\n          >\n            Clear\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {};\n\nHeader.defaultProps = {};\n\nexport default memo(Header);\n","import React, { memo } from \"react\";\nimport { useSectionIds } from \"../redux/mainSlice\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\n\n// const chihat = new Audio(\"/drum-sounds-master/closed-hihat.mp3\");\n// const snare = new Audio(\"/drum-sounds-master/acoustic-snare.mp3\");\n// const bass = new Audio(\"/drum-sounds-master/bass-drum-1.mp3\");\n//\n// const notes = [chihat, snare, bass];\n\nconst TaikoGrid = () => {\n  const sectionsIds = useSectionIds();\n  console.debug(\"TaikoGrid rerender\");\n  return (\n    <div>\n      <Header />\n      <div>\n        {sectionsIds.map((sectionId, sectionIndex) => (\n          <Section key={sectionId} sectionId={sectionIndex} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TaikoGrid);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * React class to contain a page\n */\nconst PageContainer = ({ children }) => (\n  <div className=\"container mx-auto\">{children}</div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nPageContainer.defaultProps = {\n  children: \"asd\",\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport TaikoGrid from \"./Components/TaikoGrid\";\nimport PageContainer from \"./Components/PageContainer\";\nimport { store } from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <PageContainer>\n          <TaikoGrid />\n        </PageContainer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}