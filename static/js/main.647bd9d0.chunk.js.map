{"version":3,"sources":["redux/mainSlice.js","Components/TaikoGridSettings.js","Components/Button.js","redux/store.js","hooks/useOnClickOutside.js","Components/PopupMenu.js","Components/Cell.js","Components/Section.js","Components/TaikoGrid.js","Components/PageContainer.js","App.js","serviceWorker.js","index.js"],"names":["name","useSettings","useSelector","state","settings","shallowEqual","getNewSection","index","cells","id","totalLines","mainSlice","createSlice","initialState","sections","soundIndex","intensity","sectionName","cellsPerLine","divideEvery","sounds","reducers","clearState","action","setSettings","Object","keys","payload","forEach","key","setTotalLines","sectionIndex","final","Math","max","slice","setSectionName","setSoundIndex","cellIndex","cell","setIntensity","setMainState","addSection","push","length","removeLastSection","pop","actions","setCellsPerLine","setDivideEvery","setSounds","numerators","Array","map","TaikoGridSettings","dispatch","useDispatch","onFormChange","e","target","value","usedValue","dataType","Number","onSubmit","className","onChange","defaultProps","memo","Button","children","rest","type","undefined","configureStoreOptions","reducer","mainName","mainReducer","store","configureStore","localStorageKey","saveMainToLocal","getState","localStorage","setItem","JSON","stringify","useEffect","require","PopupMenu","open","onOpenChange","soundArray","menuCoordinates","tooltipColumns","ceil","ref","useRef","onClickOutside","useCallback","preventDefault","stopPropagation","useState","actualPosition","setActualPosition","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","console","debug","left","min","window","innerWidth","clientWidth","top","innerHeight","clientHeight","style","soundNote","onClick","Cell","props","backgroundClass","isPlaying","isStartingCell","showMenu","setShowMenu","setMenuCoordinates","v","useCell","currentSoundIndex","sound","onContextMenu","clientX","clientY","toLocaleUpperCase","Section","sectionId","section","useMemo","split","s","trim","sectionCells","numCells","mobileDisplayedCells","floor","TaikoGrid","sectionsIds","src","process","alt","getItem","parse","getMainFromLocal","PageContainer","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.647bd9d0.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nexport const name = \"main\";\n\nexport const initialState = {\n  sections: [\n    {\n      cells: [\n        {\n          soundIndex: 1,\n        },\n        null,\n        {\n          soundIndex: 3,\n          intensity: 1,\n        },\n        {\n          soundIndex: 1,\n        },\n        {\n          soundIndex: 0,\n        },\n        {\n          soundIndex: 3,\n          intensity: 1,\n        },\n        {\n          soundIndex: 1,\n        },\n        {\n          soundIndex: 0,\n        },\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 4,\n        },\n        {\n          soundIndex: 5,\n        },\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 4,\n        },\n        {\n          soundIndex: 6,\n        },\n        {\n          soundIndex: 8,\n        },\n        {\n          soundIndex: 9,\n        },\n        {\n          soundIndex: 7,\n        },\n        {\n          soundIndex: 3,\n          intensity: 1,\n        },\n        {\n          soundIndex: 11,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 4,\n        },\n        {\n          soundIndex: 2,\n          intensity: 1,\n        },\n        {\n          soundIndex: 0,\n        },\n        {\n          soundIndex: 3,\n          intensity: 1,\n        },\n        {\n          soundIndex: 7,\n        },\n        {\n          soundIndex: 5,\n        },\n        {\n          soundIndex: 4,\n        },\n        {\n          soundIndex: 5,\n        },\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          soundIndex: 5,\n        },\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        {\n          soundIndex: 12,\n        },\n        {\n          soundIndex: 10,\n          intensity: 1,\n        },\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        {\n          soundIndex: 7,\n        },\n        {\n          soundIndex: 2,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 5,\n        },\n        {\n          soundIndex: 4,\n          intensity: 1,\n        },\n        {\n          soundIndex: 4,\n          intensity: 1,\n        },\n        {\n          soundIndex: 7,\n        },\n        {\n          soundIndex: 3,\n          intensity: 1,\n        },\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 7,\n        },\n        {\n          soundIndex: 4,\n        },\n        {\n          soundIndex: 3,\n          intensity: 1,\n        },\n        null,\n        {\n          soundIndex: 7,\n        },\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          soundIndex: 1,\n          intensity: 1,\n        },\n      ],\n      id: 1,\n      sectionName: \"Line 1\",\n      totalLines: 4,\n    },\n    {\n      cells: [],\n      id: 2,\n      sectionName: \"Line 2\",\n      totalLines: 1,\n    },\n  ],\n  settings: {\n    cellsPerLine: 16,\n    divideEvery: 2,\n    sounds: \"don, kon, ka, do, ko, ro, su, tsu,ku, kara, ra, doko\",\n  },\n};\nexport const useSettings = () =>\n  useSelector((state) => state[name].settings, shallowEqual);\n\nexport const useSections = () =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections;\n  }, shallowEqual);\n\nexport const useSectionIds = () =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections.map((s) => s.id);\n  }, shallowEqual);\n\nexport const useSectionNoCells = (index) =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    const section = {\n      ...sections[index],\n    };\n    delete section.cells;\n    return section;\n  }, shallowEqual);\n\nexport const useCell = (sectionIndex, cellIndex) =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections[sectionIndex].cells[cellIndex] || {};\n  }, shallowEqual);\n\nconst getNewSection = (index = 0) => ({\n  cells: [],\n  id: index,\n  name: `Line ${index}`,\n  totalLines: 1,\n});\n\nexport const mainSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    clearState: (state, action) => {\n      state.sections = [getNewSection()];\n    },\n    setSettings: (state, action) => {\n      Object.keys(action.payload).forEach((key) => {\n        state.settings[key] = action.payload[key];\n      });\n    },\n    setTotalLines: (state, action) => {\n      const { sectionIndex, totalLines } = action.payload;\n      const final = Math.max(totalLines, 1);\n      const { cellsPerLine } = state.settings;\n      state.sections[sectionIndex].totalLines = final;\n      state.sections[sectionIndex].cells = state.sections[\n        sectionIndex\n      ].cells.slice(0, final * cellsPerLine);\n    },\n    setSectionName: (state, action) => {\n      const { sectionIndex, sectionName } = action.payload;\n      state.sections[sectionIndex].sectionName = sectionName;\n    },\n    setSoundIndex: (state, action) => {\n      const { sectionIndex, cellIndex, soundIndex } = action.payload;\n      const section = state.sections[sectionIndex];\n      const cell = section.cells[cellIndex] || {};\n      cell.soundIndex = soundIndex;\n      state.sections[sectionIndex].cells[cellIndex] = cell;\n    },\n    setIntensity: (state, action) => {\n      const { sectionIndex, cellIndex, intensity } = action.payload;\n      const section = state.sections[sectionIndex];\n      const cell = section.cells[cellIndex] || {};\n      cell.intensity = intensity;\n      state.sections[sectionIndex].cells[cellIndex] = cell;\n    },\n    setMainState: (state, action) => action.payload,\n    addSection: (state, action) => {\n      state.sections.push(getNewSection(state.sections.length + 1));\n    },\n    removeLastSection: (state, action) => {\n      state.sections.pop();\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCellsPerLine,\n  setDivideEvery,\n  setTotalLines,\n  setSectionName,\n  setSounds,\n  setSettings,\n  setSoundIndex,\n  setIntensity,\n  setMainState,\n  addSection,\n  removeLastSection,\n  clearState,\n} = mainSlice.actions;\n\nexport default mainSlice.reducer;\n","import React, { memo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setSettings, useSettings } from \"../redux/mainSlice\";\n\nconst numerators = [...Array(20).keys()].map((key) => key + 1);\n// export const denominators = [4, 8, 16];\n\nconst TaikoGridSettings = () => {\n  const settings = useSettings();\n  const dispatch = useDispatch();\n  const { cellsPerLine, divideEvery, sounds } = settings;\n  const onSubmit = () => {};\n  const onFormChange = (e) => {\n    const { name, value, dataType } = e.target;\n    const usedValue = dataType === \"number\" ? Number(value) : value;\n    dispatch(\n      setSettings({\n        [name]: usedValue,\n      })\n    );\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"flex flex-col \">\n      <div className=\"flex flex-row justify-between\">\n        <label>Cells Per Line</label>\n        <select\n          name=\"cellsPerLine\"\n          className=\"p-2 \"\n          onChange={onFormChange}\n          value={cellsPerLine}\n          data-data-type=\"number\"\n        >\n          {numerators.map((key) => (\n            <option key={`cellsPerLine_${key}`} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"flex flex-row justify-between\">\n        <label>Divide every</label>\n        <select\n          name=\"divideEvery\"\n          className=\"p-2 \"\n          onChange={onFormChange}\n          value={divideEvery}\n          data-data-type=\"number\"\n        >\n          {numerators.map((key) => (\n            <option key={`defaultDivideEvery_${key}`} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"flex flex-row justify-between items-end mt-3\">\n        <label>Available Sounds</label>\n        <input\n          name=\"sounds\"\n          className=\"border-black border p-1\"\n          onChange={onFormChange}\n          value={sounds}\n        />\n      </div>\n    </form>\n  );\n};\n\nTaikoGridSettings.propTypes = {};\n\nTaikoGridSettings.defaultProps = {};\n\nexport default memo(TaikoGridSettings);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A component which will show a styled button\n */\nconst Button = ({ children, className, ...rest }) => (\n  <button\n    type=\"button\"\n    className={`p-3 bg-blue-100 text-gray-800 cursor-pointer hover:opacity-75 ${className}`}\n    {...rest}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nButton.defaultProps = {\n  className: undefined,\n  children: undefined,\n};\n\nexport default memo(Button);\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport mainReducer, { name as mainName } from \"./mainSlice\";\n\nconst configureStoreOptions = {\n  reducer: {\n    [mainName]: mainReducer,\n  },\n};\n\nexport const store = configureStore(configureStoreOptions);\n\nexport const getMainState = () => store.getState()[mainName];\n\nconst localStorageKey = \"taikoNotesState\";\n\nexport const saveMainToLocal = () => {\n  const state = getMainState();\n  localStorage.setItem(localStorageKey, JSON.stringify(state));\n};\n\nexport const getMainFromLocal = () => {\n  const state = localStorage.getItem(localStorageKey);\n  if (state) {\n    return JSON.parse(state);\n  }\n  return null;\n};\n","const { useEffect } = require(\"react\");\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n","import React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { setSoundIndex } from \"../redux/mainSlice\";\nimport useOnClickOutside from \"../hooks/useOnClickOutside\";\n\nconst PopupMenu = ({\n  cellIndex,\n  open,\n  onOpenChange,\n  soundArray,\n  sectionIndex,\n  menuCoordinates,\n}) => {\n  const tooltipColumns = Math.ceil(soundArray.length / 4);\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const onClickOutside = useCallback(\n    (e) => {\n      onOpenChange(false);\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    [onOpenChange]\n  );\n  const [actualPosition, setActualPosition] = useState();\n  useOnClickOutside(ref, onClickOutside);\n  console.debug(\"PopupMenu rerender\");\n\n  useEffect(() => {\n    if (ref.current && menuCoordinates) {\n      const left = Math.min(\n        menuCoordinates[0],\n        window.innerWidth - ref.current.clientWidth - 30\n      );\n      const top = Math.min(\n        menuCoordinates[1] - 50,\n        window.innerHeight - ref.current.clientHeight\n      );\n      setActualPosition({ left, top });\n    } else {\n      setActualPosition(null);\n    }\n  }, [open, menuCoordinates]);\n  return (\n    open && (\n      <div\n        ref={ref}\n        className={`popupmenu grid grid-rows-4 grid-cols-${tooltipColumns} w-max grid-flow-col max-h-48 ${\n          actualPosition ? \"\" : \"invisible\"\n        }`}\n        style={actualPosition}\n      >\n        {soundArray.map((soundNote, soundIndex) => (\n          <div\n            key={soundIndex}\n            className=\"p-3 hover:bg-blue-200 \"\n            onClick={(e) => {\n              dispatch(\n                setSoundIndex({\n                  cellIndex,\n                  sectionIndex,\n                  soundIndex,\n                })\n              );\n              onClickOutside(e);\n            }}\n          >\n            {soundNote}\n          </div>\n        ))}\n      </div>\n    )\n  );\n};\n\nPopupMenu.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onOpenChange: PropTypes.func.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  soundArray: PropTypes.arrayOf(PropTypes.string).isRequired,\n  menuCoordinates: PropTypes.arrayOf(PropTypes.number),\n  sectionIndex: PropTypes.number.isRequired,\n};\n\nPopupMenu.defaultProps = { menuCoordinates: undefined };\n\nexport default memo(PopupMenu);\n","import React, { memo, useCallback, useState } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { setIntensity, setSoundIndex, useCell } from \"../redux/mainSlice\";\nimport PopupMenu from \"./PopupMenu\";\n\nconst Cell = (props) => {\n  const {\n    soundArray = [],\n    cellIndex,\n    sectionIndex,\n    isPlaying,\n    isStartingCell,\n  } = props;\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuCoordinates, setMenuCoordinates] = useState();\n  const onOpenChange = useCallback((v) => {\n    setShowMenu(v);\n  }, []);\n\n  let backgroundClass;\n  const { soundIndex: currentSoundIndex = 0, intensity } = useCell(\n    sectionIndex,\n    cellIndex\n  );\n  const sound = soundArray[currentSoundIndex] || \"\";\n  if (isPlaying) {\n    backgroundClass = \"bg-red-300 hover:bg-red-600\";\n  } else if (isStartingCell) {\n    backgroundClass = \"bg-gray-300 hover:bg-blue-400\";\n  } else {\n    backgroundClass = \"hover:bg-blue-400\";\n  }\n\n  console.debug(`Cell rerender ${cellIndex}`);\n  return (\n    <div\n      className={`flex flex-row justify-center items-center select-none border border-blue-800 h-10 cursor-pointer ${backgroundClass}`}\n      onContextMenu={(e) => {\n        dispatch(\n          setIntensity({\n            cellIndex,\n            sectionIndex,\n            intensity: intensity ? 0 : 1,\n          })\n        );\n        e.preventDefault();\n      }}\n      onClick={(e) => {\n        setShowMenu(true);\n        setMenuCoordinates([e.clientX, e.clientY]);\n        e.preventDefault();\n      }}\n    >\n      {intensity ? sound.toLocaleUpperCase() : sound}\n      <PopupMenu\n        open={showMenu}\n        menuCoordinates={menuCoordinates}\n        onOpenChange={onOpenChange}\n        cellIndex={cellIndex}\n        sectionIndex={sectionIndex}\n        soundArray={soundArray}\n      />\n    </div>\n  );\n};\n\nCell.propTypes = {\n  isStartingCell: PropTypes.bool.isRequired,\n  soundArray: PropTypes.arrayOf(PropTypes.string).isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  isPlaying: PropTypes.bool,\n};\n\nCell.defaultProps = {\n  isPlaying: undefined,\n};\n\nexport default memo(Cell);\n","import React, { memo, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport Cell from \"./Cell\";\nimport {\n  setSectionName,\n  setTotalLines,\n  useSectionNoCells,\n  useSettings,\n} from \"../redux/mainSlice\";\nimport Button from \"./Button\";\n\nconst Section = (props) => {\n  const { sectionId } = props;\n  const { cellsPerLine, divideEvery, sounds } = useSettings();\n  const dispatch = useDispatch();\n  const section = useSectionNoCells(sectionId);\n  const soundArray = useMemo(\n    () => [null, ...sounds.split(\",\").map((s) => s.trim())],\n    [sounds]\n  );\n  const { sectionName, totalLines, id } = section;\n  const sectionCells = [];\n  const numCells = cellsPerLine * totalLines;\n  const mobileDisplayedCells =\n    cellsPerLine > 7 ? Math.floor(cellsPerLine / 2) : cellsPerLine;\n  console.debug(`Section rerender ${sectionName} - ${id}`);\n  for (let cellIndex = 0; cellIndex < numCells; cellIndex++) {\n    sectionCells.push(\n      <Cell\n        key={`cell_${sectionId}_${cellIndex}`}\n        isStartingCell={cellIndex % divideEvery === 0}\n        cellsPerLine={cellsPerLine}\n        cellIndex={cellIndex}\n        sectionIndex={sectionId}\n        soundArray={soundArray}\n      />\n    );\n  }\n  return (\n    <div key={`section_${sectionId}`} className=\"mb-8\">\n      <div>\n        <Button\n          className=\"mr-2\"\n          onClick={() => {\n            dispatch(\n              setTotalLines({\n                sectionIndex: sectionId,\n                totalLines: totalLines + 1,\n              })\n            );\n          }}\n        >\n          +\n        </Button>\n        <Button\n          className=\"mr-2\"\n          onClick={() => {\n            dispatch(\n              setTotalLines({\n                sectionIndex: sectionId,\n                totalLines: totalLines - 1,\n              })\n            );\n          }}\n        >\n          -\n        </Button>\n\n        <input\n          type=\"text\"\n          value={sectionName}\n          className=\"text-2xl  outline-none\"\n          onChange={(e) => {\n            dispatch(\n              setSectionName({\n                sectionIndex: sectionId,\n                sectionName: e.target.value,\n              })\n            );\n          }}\n        />\n      </div>\n      <div\n        className={`grid grid-cols-${mobileDisplayedCells} md:grid-cols-${cellsPerLine} border border-blue-800`}\n      >\n        {sectionCells}\n      </div>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  sectionId: PropTypes.number,\n};\n\nSection.defaultProps = {\n  sectionId: undefined,\n};\nexport default memo(Section);\n","import React, { memo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TaikoGridSettings from \"./TaikoGridSettings\";\nimport {\n  addSection,\n  clearState,\n  removeLastSection,\n  setMainState,\n  useSectionIds,\n} from \"../redux/mainSlice\";\nimport Button from \"./Button\";\nimport { getMainFromLocal, saveMainToLocal } from \"../redux/store\";\nimport Section from \"./Section\";\n\n// const chihat = new Audio(\"/drum-sounds-master/closed-hihat.mp3\");\n// const snare = new Audio(\"/drum-sounds-master/acoustic-snare.mp3\");\n// const bass = new Audio(\"/drum-sounds-master/bass-drum-1.mp3\");\n//\n// const notes = [chihat, snare, bass];\n\nconst TaikoGrid = () => {\n  const dispatch = useDispatch();\n  const sectionsIds = useSectionIds();\n  console.debug(\"TaikoGrid rerender\");\n  return (\n    <div>\n      <div className=\"settings mt-3 mb-3 p-3 flex flex-col md:flex-row\">\n        <img\n          src={`${process.env.PUBLIC_URL}/favicon/Taiko.svg`}\n          className=\"w-1/12 pr-2\"\n          alt=\"taiko logo\"\n        />\n        <div className=\"w-full md:w-6/12 lg:w-4/12 border border-blue-300 p-2 mr-auto w-full\">\n          <TaikoGridSettings />\n        </div>\n        <div className=\"w-full md:w-6/12 lg:w-4/12 flex flex-col justify-between\">\n          <div className=\"grid grid-rows-2 grid-flow-col\">\n            <Button\n              onClick={() => {\n                dispatch(addSection());\n              }}\n              className=\"m-4\"\n            >\n              Add Section\n            </Button>\n            <Button\n              onClick={() => {\n                dispatch(removeLastSection());\n              }}\n              className=\"m-4\"\n            >\n              Remove Last Section\n            </Button>\n            <Button\n              onClick={() => {\n                saveMainToLocal();\n              }}\n              className=\"m-4\"\n            >\n              Save\n            </Button>\n            <Button\n              onClick={() => {\n                const state = getMainFromLocal();\n                console.debug(\"entire state\", state);\n                dispatch(setMainState(state));\n              }}\n              className=\"m-4\"\n            >\n              Load\n            </Button>\n            <Button\n              onClick={() => {\n                dispatch(clearState());\n              }}\n              className=\"m-4\"\n            >\n              Clear\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {sectionsIds.map((sectionId, sectionIndex) => (\n          <Section key={sectionId} sectionId={sectionIndex} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TaikoGrid);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * React class to contain a page\n */\nconst PageContainer = ({ children }) => (\n  <div className=\"container mx-auto\">{children}</div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nPageContainer.defaultProps = {\n  children: \"asd\",\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport TaikoGrid from \"./Components/TaikoGrid\";\nimport PageContainer from \"./Components/PageContainer\";\nimport { store } from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <PageContainer>\n          <TaikoGrid />\n        </PageContainer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}