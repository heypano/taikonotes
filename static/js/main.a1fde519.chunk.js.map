{"version":3,"sources":["redux/mainSlice.js","keyboard/util.js","redux/cellSlice.js","Components/Cell.js","Components/Button.js","Components/SectionButton.js","Icons/GearIcon.js","hooks/useOnClickOutside.js","Components/PopupMenu.js","Components/SettingInput.js","Components/TaikoGridSettings.js","Components/SectionSettings.js","Icons/Minus.js","Icons/Plus.js","Components/Section.js","redux/store.js","Components/Header.js","Components/TaikoGrid.js","Components/PageContainer.js","Icons/Comment.js","Components/CellPopupMenu.js","App.js","serviceWorker.js","index.js"],"names":["name","useSettings","sectionIndex","useSelector","state","sections","settings","shallowEqual","useSoundObj","undefined","soundObj","getNewSection","index","cells","id","sectionName","totalLines","cellsPerLine","divideEvery","sounds","don","kon","ka","mainSlice","createSlice","initialState","sound","intensity","do","ko","ro","su","tsu","ku","kara","ra","doko","reducers","clearState","action","setSettings","payload","sectionId","Object","keys","forEach","key","fromEntries","split","map","s","trim","setTotalLines","final","Math","max","slice","setSectionName","setSound","cellIndex","cell","setIntensity","setMainState","addSection","push","length","removeLastSection","pop","actions","setCellsPerLine","setDivideEvery","setSounds","onEnter","callback","e","onSpace","open","menuCoordinates","cellSlice","setCellPopupState","setCellPopupOpen","setCellPopupMenuCoordinates","setCellPopupCellIndex","setCellPopupSectionIndex","Cell","props","isPlaying","isStartingCell","isFirstCellInLine","ref","useRef","dispatch","useDispatch","useCell","currentSound","backgroundClass","borderClass","console","debug","onClick","clientX","clientY","target","getBoundingClientRect","x","y","preventDefault","onContextMenu","className","role","tabIndex","onKeyPress","toLocaleUpperCase","defaultProps","memo","Button","children","rest","type","SectionButton","GearIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","useEffect","require","PopupMenu","onOpenChange","style","left","top","useState","actualPosition","setActualPosition","onClickOutside","useCallback","stopPropagation","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","maxLeft","window","innerWidth","clientWidth","maxTop","innerHeight","clientHeight","usedLeft","min","usedTop","visibleClass","preventAndStop","SettingInput","htmlFor","numerators","Array","TaikoGridSettings","onFormChange","value","usedValue","dataType","Number","onChange","SectionSettings","Minus","Plus","Section","sectionSettingsOpen","setSectionSettingsOpen","section","sectionCells","numCells","sectionSettingsLeft","setSectionSettingsLeft","sectionSettingsTop","setSectionSettingsTop","mobileDisplayedCells","floor","isOpen","configureStoreOptions","reducer","mainName","mainReducer","cellName","cellReducer","store","configureStore","localStorageKey","saveMainToLocal","getState","localStorage","setItem","JSON","stringify","HeaderButton","Header","src","process","alt","getItem","parse","getMainFromLocal","TaikoGrid","sectionsIds","PageContainer","Comment","CellPopupMenu","tooltipColumns","ceil","firstCellRef","setTimeout","focus","values","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6LAIaA,EAAO,OAyZPC,EAAc,SAACC,GAAD,OACzBC,aACE,SAACC,GAAD,OAAWA,EAAK,KAAOC,SAASH,GAAcI,WAC9CC,MAGSC,EAAc,SAACN,GAAD,OACzBC,aAAY,SAACC,GACX,YAAqBK,IAAjBP,EACKE,EAAK,KAAOC,SAASH,GAAcI,SAASI,SAE9C,OACNH,MA8BCI,EAAgB,eAACC,EAAD,uDAAS,EAAT,MAAgB,CACpCC,MAAO,GACPC,GAAIF,EACJG,YAAY,QAAD,OAAUH,GACrBI,WAAY,EACZV,SAAU,CACRW,aAAc,EACdC,YAAa,EACbC,OAAQ,eACRT,SAAU,CACR,GAAI,GACJU,IAAK,MACLC,IAAK,MACLC,GAAI,SAKGC,EAAYC,YAAY,CACnCxB,OACAyB,aArd0B,CAC1BpB,SAAU,CACR,CACEQ,MAAO,CACL,CACEa,MAAO,OAET,KACA,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,OAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,KACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,QAET,CACEA,MAAO,OACPC,UAAW,GAEb,CACED,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,KACA,CACED,MAAO,MACPC,UAAW,IAGfb,GAAI,EACJC,YAAa,SACbC,WAAY,EACZV,SAAU,CACRW,aAAc,GACdC,YAAa,EACbC,OAAQ,uDACRT,SAAU,CACR,GAAI,GACJU,IAAK,MACLC,IAAK,MACLC,GAAI,KACJM,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,KAAM,UAIZ,CACEvB,MAAO,CACL,CACEa,MAAO,OAET,KACA,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,OAET,CACEA,MAAO,IAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,OAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,KACPC,UAAW,GAEb,KACA,CACED,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,CACED,MAAO,IAET,CACEA,MAAO,KACPC,UAAW,GAEb,CACED,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MAET,CACEA,MAAO,MACPC,UAAW,GAEb,KACA,KACA,CACED,MAAO,MAE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","file":"static/js/main.a1fde519.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nexport const name = \"main\";\n\nexport const initialState = {\n  sections: [\n    {\n      cells: [\n        {\n          sound: \"don\",\n        },\n        null,\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ro\",\n        },\n        {\n          sound: \"tsu\",\n        },\n        {\n          sound: \"ku\",\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"ra\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"doko\",\n        },\n        {\n          sound: \"kara\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n      ],\n      id: 1,\n      sectionName: \"Line 1\",\n      totalLines: 4,\n      settings: {\n        cellsPerLine: 16,\n        divideEvery: 2,\n        sounds: \"don, kon, ka, do, ko, ro, su, tsu,ku, kara, ra, doko\",\n        soundObj: {\n          \"\": \"\",\n          don: \"don\",\n          kon: \"kon\",\n          ka: \"ka\",\n          do: \"do\",\n          ko: \"ko\",\n          ro: \"ro\",\n          su: \"su\",\n          tsu: \"tsu\",\n          ku: \"ku\",\n          kara: \"kara\",\n          ra: \"ra\",\n          doko: \"doko\",\n        },\n      },\n    },\n    {\n      cells: [\n        {\n          sound: \"don\",\n        },\n        null,\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ro\",\n        },\n        {\n          sound: \"tsu\",\n        },\n        {\n          sound: \"ku\",\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"ra\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        {\n          sound: \"\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"doko\",\n        },\n        {\n          sound: \"kara\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"kon\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"ko\",\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"do\",\n          intensity: 1,\n        },\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"do\",\n        },\n        {\n          sound: \"ka\",\n          intensity: 1,\n        },\n        null,\n        {\n          sound: \"su\",\n        },\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n        null,\n        null,\n        {\n          sound: \"don\",\n          intensity: 1,\n        },\n      ],\n      id: 2,\n      sectionName: \"Line 2\",\n      totalLines: 4,\n      settings: {\n        cellsPerLine: 4,\n        divideEvery: 2,\n        sounds: \"don, kon, ka\",\n        soundObj: {\n          \"\": \"\",\n          don: \"don\",\n          kon: \"kon\",\n          ka: \"ka\",\n        },\n      },\n    },\n  ],\n};\nexport const useSettings = (sectionIndex) =>\n  useSelector(\n    (state) => state[name].sections[sectionIndex].settings,\n    shallowEqual\n  );\n\nexport const useSoundObj = (sectionIndex) =>\n  useSelector((state) => {\n    if (sectionIndex !== undefined) {\n      return state[name].sections[sectionIndex].settings.soundObj;\n    }\n    return null;\n  }, shallowEqual);\n\nexport const useSections = () =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections;\n  }, shallowEqual);\n\nexport const useSectionIds = () =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections.map((s) => s.id);\n  }, shallowEqual);\n\nexport const useSectionNoCells = (index) =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    const section = {\n      ...sections[index],\n    };\n    delete section.cells;\n    return section;\n  }, shallowEqual);\n\nexport const useCell = (sectionIndex, cellIndex) =>\n  useSelector((state) => {\n    const { sections } = state[name];\n    return sections[sectionIndex].cells[cellIndex] || {};\n  }, shallowEqual);\n\nconst getNewSection = (index = 0) => ({\n  cells: [],\n  id: index,\n  sectionName: `Line ${index}`,\n  totalLines: 1,\n  settings: {\n    cellsPerLine: 4,\n    divideEvery: 2,\n    sounds: \"don, kon, ka\",\n    soundObj: {\n      \"\": \"\",\n      don: \"don\",\n      kon: \"kon\",\n      ka: \"ka\",\n    },\n  },\n});\n\nexport const mainSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    clearState: (state, action) => {\n      state.sections = [getNewSection()];\n    },\n    setSettings: (state, action) => {\n      const { sectionId, settings } = action.payload;\n      Object.keys(settings).forEach((key) => {\n        state.sections[sectionId].settings[key] = settings[key];\n      });\n      state.sections[sectionId].settings.soundObj = Object.fromEntries(\n        `,${state.sections[sectionId].settings.sounds}`\n          .split(\",\")\n          .map((s) => [s.trim(), s.trim()])\n      );\n      // Erase sounds that don't match\n      // state.sections.forEach((section) => {\n      //   section.cells.forEach((cell) => {\n      //     if (cell) {\n      //       cell.sound = state.settings.soundObj[cell.sound] ? cell.sound : \"\";\n      //     }\n      //   });\n      // });\n    },\n    setTotalLines: (state, action) => {\n      const { sectionIndex, totalLines } = action.payload;\n      const final = Math.max(totalLines, 1);\n      const { cellsPerLine } = state.sections[sectionIndex].settings;\n      state.sections[sectionIndex].totalLines = final;\n      state.sections[sectionIndex].cells = state.sections[\n        sectionIndex\n      ].cells.slice(0, final * cellsPerLine);\n    },\n    setSectionName: (state, action) => {\n      const { sectionIndex, sectionName } = action.payload;\n      state.sections[sectionIndex].sectionName = sectionName;\n    },\n    setSound: (state, action) => {\n      const { sectionIndex, cellIndex, sound } = action.payload;\n      const section = state.sections[sectionIndex];\n      const cell = section.cells[cellIndex] || {};\n      cell.sound = sound;\n      state.sections[sectionIndex].cells[cellIndex] = cell;\n    },\n    setIntensity: (state, action) => {\n      const { sectionIndex, cellIndex, intensity } = action.payload;\n      const section = state.sections[sectionIndex];\n      const cell = section.cells[cellIndex] || {};\n      cell.intensity = intensity;\n      state.sections[sectionIndex].cells[cellIndex] = cell;\n    },\n    setMainState: (state, action) => action.payload,\n    addSection: (state, action) => {\n      state.sections.push(getNewSection(state.sections.length + 1));\n    },\n    removeLastSection: (state, action) => {\n      state.sections.pop();\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCellsPerLine,\n  setDivideEvery,\n  setTotalLines,\n  setSectionName,\n  setSounds,\n  setSettings,\n  setSound,\n  setIntensity,\n  setMainState,\n  addSection,\n  removeLastSection,\n  clearState,\n} = mainSlice.actions;\n\nexport default mainSlice.reducer;\n","export function onEnter(callback) {\n  return (e) => {\n    if (e.key === \"Enter\") {\n      callback(e);\n    }\n  };\n}\n\nexport function onSpace(callback) {\n  return (e) => {\n    if (e.key === \" \") {\n      callback(e);\n    }\n  };\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nexport const name = \"cell\";\n\nexport const initialState = {\n  open: false,\n  menuCoordinates: undefined,\n  cellIndex: undefined,\n  sectionIndex: undefined,\n};\n\nexport const useCellPopupOpen = () =>\n  useSelector((state) => {\n    const { open } = state[name];\n    return open;\n  }, shallowEqual);\n\nexport const useCellMenuCoordinates = () =>\n  useSelector((state) => {\n    const { menuCoordinates } = state[name];\n    return menuCoordinates;\n  }, shallowEqual);\n\nexport const useCellIndex = () =>\n  useSelector((state) => {\n    const { cellIndex } = state[name];\n    return cellIndex;\n  }, shallowEqual);\n\nexport const useCellSectionIndex = () =>\n  useSelector((state) => {\n    const { sectionIndex } = state[name];\n    return sectionIndex;\n  }, shallowEqual);\n\nexport const cellSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setCellPopupState: (state, action) => {\n      const { sectionIndex, cellIndex, menuCoordinates, open } = action.payload;\n      return { ...state, sectionIndex, cellIndex, menuCoordinates, open };\n    },\n    setCellPopupOpen: (state, action) => {\n      state.open = action.payload;\n    },\n    setCellPopupMenuCoordinates: (state, action) => {\n      state.menuCoordinates = action.payload;\n    },\n    setCellPopupCellIndex: (state, action) => {\n      state.cellIndex = action.payload;\n    },\n    setCellPopupSectionIndex: (state, action) => {\n      state.sectionIndex = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCellPopupOpen,\n  setCellPopupMenuCoordinates,\n  setCellPopupCellIndex,\n  setCellPopupSectionIndex,\n  setCellPopupState,\n} = cellSlice.actions;\n\nexport default cellSlice.reducer;\n","import React, { memo, useRef } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { setIntensity, useCell, useSoundObj } from \"../redux/mainSlice\";\nimport { onEnter, onSpace } from \"../keyboard/util\";\nimport { setCellPopupState } from \"../redux/cellSlice\";\n\nconst Cell = (props) => {\n  const {\n    cellIndex,\n    sectionIndex,\n    isPlaying,\n    isStartingCell,\n    isFirstCellInLine,\n    cellsPerLine,\n  } = props;\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const soundObj = useSoundObj(sectionIndex);\n\n  const { sound: currentSound = 0, intensity } = useCell(\n    sectionIndex,\n    cellIndex\n  );\n  const sound = (currentSound && soundObj[currentSound]) || \"\";\n  let backgroundClass = \"bg-white hover:bg-blue-400\";\n  if (isPlaying) {\n    backgroundClass = \"bg-red-300 hover:bg-red-600\";\n  } else if (isStartingCell) {\n    backgroundClass = \"bg-gray-300 hover:bg-blue-400\";\n  }\n  let borderClass = \"border border-blue-800\";\n\n  // when we show fewer cells per line, help identify the start of every line\n  if (isFirstCellInLine && cellsPerLine % 2 === 1) {\n    borderClass = \"border-2 border-red-400 md:border md:border-blue-800\";\n  }\n\n  console.debug(`Cell rerender ${cellIndex}`);\n\n  const onClick = (e) => {\n    let menuCoordinates;\n    if (e.clientX && e.clientY) {\n      menuCoordinates = [e.clientX, e.clientY];\n    } else if (e.target) {\n      const { x, y } = e.target.getBoundingClientRect();\n      menuCoordinates = [x, y];\n    }\n    dispatch(\n      setCellPopupState({\n        cellIndex,\n        sectionIndex,\n        open: true,\n        menuCoordinates,\n      })\n    );\n    e.preventDefault();\n  };\n\n  const onContextMenu = (e) => {\n    dispatch(\n      setIntensity({\n        cellIndex,\n        sectionIndex,\n        intensity: intensity ? 0 : 1,\n      })\n    );\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      ref={ref}\n      className={`fadeBg flex flex-row justify-center items-center select-none h-10 cursor-pointer ${borderClass} ${backgroundClass}`}\n      role=\"button\"\n      tabIndex={0}\n      onContextMenu={onContextMenu}\n      onClick={onClick}\n      onKeyPress={(e) => {\n        onEnter(onContextMenu)(e);\n        onSpace(onClick)(e);\n      }}\n    >\n      {intensity ? sound.toLocaleUpperCase() : sound}\n    </div>\n  );\n};\n\nCell.propTypes = {\n  isStartingCell: PropTypes.bool.isRequired,\n  isFirstCellInLine: PropTypes.bool.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  cellsPerLine: PropTypes.number.isRequired,\n  isPlaying: PropTypes.bool,\n};\n\nCell.defaultProps = {\n  isPlaying: undefined,\n};\n\nexport default memo(Cell);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A component which will show a styled button\n */\nconst Button = ({ children, className, ...rest }) => (\n  <button\n    type=\"button\"\n    className={`p-3 bg-blue-100 text-gray-800 cursor-pointer hover:bg-blue-50 ${className}`}\n    {...rest}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nButton.defaultProps = {\n  className: undefined,\n  children: undefined,\n};\n\nexport default memo(Button);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst SectionButton = ({ children, onClick }) => (\n  <Button className=\"mr-2 spinIcon\" onClick={onClick}>\n    {children}\n  </Button>\n);\n\nSectionButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default memo(SectionButton);\n","import React from \"react\";\n\nexport default function GearIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n      />\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n      />\n    </svg>\n  );\n}\n","const { useEffect } = require(\"react\");\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    document.addEventListener(\"keypress\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n      document.removeEventListener(\"keypress\", listener);\n    };\n  }, [ref, handler]);\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useOnClickOutside from \"../hooks/useOnClickOutside\";\nimport { onEnter } from \"../keyboard/util\";\n\nconst PopupMenu = ({\n  open,\n  onOpenChange,\n  className,\n  style,\n  children,\n  left,\n  top,\n}) => {\n  const ref = useRef();\n  const [actualPosition, setActualPosition] = useState();\n  const onClickOutside = useCallback(\n    (e) => {\n      if (open) {\n        onOpenChange(false);\n        e.stopPropagation();\n      }\n    },\n    [open, onOpenChange]\n  );\n  useOnClickOutside(ref, onClickOutside);\n\n  useEffect(() => {\n    if (ref.current && left !== undefined && top !== undefined) {\n      const minLeft = 10;\n      const minTop = 10;\n      const maxLeft = window.innerWidth - ref.current.clientWidth;\n      const maxTop = window.innerHeight - ref.current.clientHeight;\n      const usedLeft = Math.max(Math.min(left, maxLeft), minLeft);\n      const usedTop = Math.max(Math.min(top, maxTop), minTop);\n      setActualPosition({ left: usedLeft, top: usedTop });\n    } else {\n      setActualPosition(null);\n    }\n  }, [left, open, top]);\n\n  const visibleClass = actualPosition ? \"\" : \"invisible\";\n  const preventAndStop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  return (\n    open && (\n      <div\n        ref={ref}\n        className={`popupmenu ${visibleClass} ${className}`}\n        style={{ ...style, ...(actualPosition || {}) }}\n        onClick={preventAndStop}\n        onKeyPress={onEnter(preventAndStop)}\n        role=\"none\"\n      >\n        {children}\n      </div>\n    )\n  );\n};\n\nPopupMenu.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onOpenChange: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  left: PropTypes.number,\n  top: PropTypes.number,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n};\n\nPopupMenu.defaultProps = {\n  className: \"\",\n  style: null,\n  children: undefined,\n  left: undefined,\n  top: undefined,\n};\n\nexport default PopupMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const SettingInput = ({ children, id }) => (\n  <label\n    htmlFor={id}\n    className=\"flex flex-row justify-between items-end mt-3 first:mt-0\"\n  >\n    {children}\n  </label>\n);\n\nSettingInput.propTypes = {\n  id: PropTypes.string,\n  children: PropTypes.node,\n};\n\nSettingInput.defaultProps = {\n  id: undefined,\n  children: undefined,\n};\n\nexport default SettingInput;\n","import React, { memo, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setSettings, useSettings } from \"../redux/mainSlice\";\nimport { SettingInput } from \"./SettingInput\";\n\nconst numerators = [...Array(20).keys()].map((key) => key + 1);\n// export const denominators = [4, 8, 16];\n\nconst TaikoGridSettings = ({ sectionId }) => {\n  const settings = useSettings(sectionId);\n  const dispatch = useDispatch();\n  const { cellsPerLine = 16, divideEvery = 4, sounds = \"ka,don\" } = settings;\n\n  const onFormChange = useCallback(\n    (e) => {\n      const { name, value, dataType } = e.target;\n      const usedValue = dataType === \"number\" ? Number(value) : value;\n      dispatch(\n        setSettings({\n          sectionId,\n          settings: {\n            [name]: usedValue,\n          },\n        })\n      );\n    },\n    [dispatch, sectionId]\n  );\n\n  return (\n    <form className=\"flex flex-col \">\n      <SettingInput>\n        Cells Per Line\n        <select\n          id=\"cellsPerLine\"\n          name=\"cellsPerLine\"\n          className=\"p-2 \"\n          onChange={onFormChange}\n          value={cellsPerLine}\n          data-data-type=\"number\"\n        >\n          {numerators.map((key) => (\n            <option key={`cellsPerLine_${key}`} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </SettingInput>\n      <SettingInput>\n        Divide every\n        <select\n          id=\"divideEvery\"\n          name=\"divideEvery\"\n          className=\"p-2 \"\n          onChange={onFormChange}\n          value={divideEvery}\n          data-data-type=\"number\"\n        >\n          {numerators.map((key) => (\n            <option key={`defaultDivideEvery_${key}`} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </SettingInput>\n      <SettingInput id={sounds}>\n        Available Sounds\n        <input\n          id=\"sounds\"\n          name=\"sounds\"\n          className=\"border-black border p-1 ml-5\"\n          onChange={onFormChange}\n          value={sounds}\n        />\n      </SettingInput>\n    </form>\n  );\n};\n\nTaikoGridSettings.propTypes = {\n  sectionId: PropTypes.number.isRequired,\n};\n\nTaikoGridSettings.defaultProps = {};\n\nexport default memo(TaikoGridSettings);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PopupMenu from \"./PopupMenu\";\nimport TaikoGridSettings from \"./TaikoGridSettings\";\n\nconst SectionSettings = ({ sectionId, open, onOpenChange, left, top }) => (\n  <PopupMenu\n    open={open}\n    onOpenChange={onOpenChange}\n    left={left}\n    top={top}\n    className=\"grid grid-rows-1 grid-cols-1 w-max max-h-48 p-4\"\n  >\n    <TaikoGridSettings sectionId={sectionId} />\n  </PopupMenu>\n);\n\nSectionSettings.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onOpenChange: PropTypes.func.isRequired,\n  sectionId: PropTypes.number.isRequired,\n  left: PropTypes.number,\n  top: PropTypes.number,\n};\n\nSectionSettings.defaultProps = {\n  left: undefined,\n  top: undefined,\n};\n\nexport default SectionSettings;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Minus = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M18 12H6\"\n    />\n  </svg>\n);\n\nexport default Minus;\n","import React from \"react\";\n\nconst Plus = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n    />\n  </svg>\n);\n\nexport default Plus;\n","import React, { memo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport Cell from \"./Cell\";\nimport {\n  setSectionName,\n  setTotalLines,\n  useSectionNoCells,\n  useSettings,\n} from \"../redux/mainSlice\";\nimport SectionButton from \"./SectionButton\";\nimport GearIcon from \"../Icons/GearIcon\";\nimport SectionSettings from \"./SectionSettings\";\nimport Minus from \"../Icons/Minus\";\nimport Plus from \"../Icons/Plus\";\n\nconst Section = (props) => {\n  const { sectionId } = props;\n  const { cellsPerLine, divideEvery } = useSettings(sectionId);\n  const [sectionSettingsOpen, setSectionSettingsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const section = useSectionNoCells(sectionId);\n  const { sectionName, totalLines, id } = section;\n  const sectionCells = [];\n  const numCells = cellsPerLine * totalLines;\n  const [sectionSettingsLeft, setSectionSettingsLeft] = useState();\n  const [sectionSettingsTop, setSectionSettingsTop] = useState();\n  const mobileDisplayedCells =\n    cellsPerLine > 7 ? Math.floor(cellsPerLine / 2) : cellsPerLine;\n  console.debug(`Section rerender ${sectionName} - ${id}`);\n  for (let cellIndex = 0; cellIndex < numCells; cellIndex++) {\n    sectionCells.push(\n      <Cell\n        key={`cell_${sectionId}_${cellIndex}`}\n        isStartingCell={cellIndex % divideEvery === 0}\n        isFirstCellInLine={cellIndex % cellsPerLine === 0}\n        cellsPerLine={cellsPerLine}\n        cellIndex={cellIndex}\n        sectionIndex={sectionId}\n      />\n    );\n  }\n  return (\n    <div key={`section_${sectionId}`} className=\"mb-8 p-1\">\n      <div className=\"flex flex-row align-baseline\">\n        <SectionButton\n          onClick={() => {\n            dispatch(\n              setTotalLines({\n                sectionIndex: sectionId,\n                totalLines: totalLines + 1,\n              })\n            );\n          }}\n        >\n          <Plus />\n        </SectionButton>\n\n        <SectionButton\n          onClick={() => {\n            dispatch(\n              setTotalLines({\n                sectionIndex: sectionId,\n                totalLines: totalLines - 1,\n              })\n            );\n          }}\n        >\n          <Minus />\n        </SectionButton>\n        <SectionButton\n          onClick={(e) => {\n            setSectionSettingsOpen(true);\n\n            if (e.clientX && e.clientY) {\n              setSectionSettingsLeft(e.clientX);\n              setSectionSettingsTop(e.clientY);\n            } else if (e.target) {\n              const { x, y } = e.target.getBoundingClientRect();\n              setSectionSettingsLeft(x);\n              setSectionSettingsTop(y);\n            }\n            e.preventDefault();\n            e.stopPropagation();\n          }}\n        >\n          <GearIcon />\n          <SectionSettings\n            sectionId={sectionId}\n            open={sectionSettingsOpen}\n            onOpenChange={(isOpen) => {\n              setSectionSettingsOpen(isOpen);\n            }}\n            left={sectionSettingsLeft}\n            top={sectionSettingsTop}\n          />\n        </SectionButton>\n        <input\n          type=\"text\"\n          value={sectionName}\n          className=\"text-2xl w-full outline-none\"\n          onChange={(e) => {\n            dispatch(\n              setSectionName({\n                sectionIndex: sectionId,\n                sectionName: e.target.value,\n              })\n            );\n          }}\n        />\n      </div>\n      <div\n        className={`bg-blue-500 grid grid-cols-${mobileDisplayedCells} md:grid-cols-${cellsPerLine} border border-blue-800`}\n      >\n        {sectionCells}\n      </div>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  sectionId: PropTypes.number,\n};\n\nSection.defaultProps = {\n  sectionId: undefined,\n};\nexport default memo(Section);\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport mainReducer, { name as mainName } from \"./mainSlice\";\nimport cellReducer, { name as cellName } from \"./cellSlice\";\n\nconst configureStoreOptions = {\n  reducer: {\n    [mainName]: mainReducer,\n    [cellName]: cellReducer,\n  },\n};\n\nexport const store = configureStore(configureStoreOptions);\n\nexport const getMainState = () => store.getState()[mainName];\n\nconst localStorageKey = \"taikoNotesState\";\n\nexport const saveMainToLocal = () => {\n  const state = getMainState();\n  localStorage.setItem(localStorageKey, JSON.stringify(state));\n};\n\nexport const getMainFromLocal = () => {\n  const state = localStorage.getItem(localStorageKey);\n  if (state) {\n    return JSON.parse(state);\n  }\n  return null;\n};\n","import React, { memo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"./Button\";\nimport {\n  addSection,\n  clearState,\n  removeLastSection,\n  setMainState,\n} from \"../redux/mainSlice\";\nimport { getMainFromLocal, saveMainToLocal } from \"../redux/store\";\n\nconst HeaderButton = ({ ...props }) => <Button {...props} />;\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"settings p-1 mt-3 mb-3 flex flex-col md:flex-row\">\n      <div className=\"w-full md:w-8/12 lg:w-6/12 grid logoGrid mr-3\">\n        <img\n          src={`${process.env.PUBLIC_URL}/favicon/Taiko.svg`}\n          className=\"w-full p-2\"\n          alt=\"taiko logo\"\n        />\n      </div>\n      <div className=\"w-full md:w-4/12 lg:w-6/12 flex flex-col justify-between\">\n        <div className=\"mt-2 md:mt-0 grid grid-rows-2 grid-flow-col gap-1\">\n          <HeaderButton\n            onClick={() => {\n              dispatch(addSection());\n            }}\n          >\n            Add Section\n          </HeaderButton>\n          <HeaderButton\n            onClick={() => {\n              dispatch(removeLastSection());\n            }}\n          >\n            Remove Last Section\n          </HeaderButton>\n          <HeaderButton\n            onClick={() => {\n              saveMainToLocal();\n            }}\n          >\n            Save\n          </HeaderButton>\n          <HeaderButton\n            onClick={() => {\n              const state = getMainFromLocal();\n              console.debug(\"entire state\", state);\n              dispatch(setMainState(state));\n            }}\n          >\n            Load\n          </HeaderButton>\n          <HeaderButton\n            onClick={() => {\n              dispatch(clearState());\n            }}\n          >\n            Clear\n          </HeaderButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {};\n\nHeader.defaultProps = {};\n\nexport default memo(Header);\n","import React, { memo } from \"react\";\nimport { useSectionIds } from \"../redux/mainSlice\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\n\n// const chihat = new Audio(\"/drum-sounds-master/closed-hihat.mp3\");\n// const snare = new Audio(\"/drum-sounds-master/acoustic-snare.mp3\");\n// const bass = new Audio(\"/drum-sounds-master/bass-drum-1.mp3\");\n//\n// const notes = [chihat, snare, bass];\n\nconst TaikoGrid = () => {\n  const sectionsIds = useSectionIds();\n  console.debug(\"TaikoGrid rerender\");\n  return (\n    <div>\n      <Header />\n      <div>\n        {sectionsIds.map((sectionId, sectionIndex) => (\n          <Section key={sectionId} sectionId={sectionIndex} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TaikoGrid);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * React class to contain a page\n */\nconst PageContainer = ({ children }) => (\n  <div className=\"container mx-auto\">{children}</div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nPageContainer.defaultProps = {\n  children: \"asd\",\n};\n\nexport default PageContainer;\n","import React from \"react\";\n\nconst Comment = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\"\n    />\n  </svg>\n);\n\nexport default Comment;\n","import React, { memo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { setSound, useSoundObj } from \"../redux/mainSlice\";\nimport { onEnter, onSpace } from \"../keyboard/util\";\nimport PopupMenu from \"./PopupMenu\";\nimport {\n  setCellPopupOpen,\n  useCellIndex,\n  useCellMenuCoordinates,\n  useCellPopupOpen,\n  useCellSectionIndex,\n} from \"../redux/cellSlice\";\nimport Comment from \"../Icons/Comment\";\n\nconst CellPopupMenu = () => {\n  const sectionIndex = useCellSectionIndex();\n  const soundObj = useSoundObj(sectionIndex);\n  const tooltipColumns = soundObj\n    ? Math.ceil(Object.keys(soundObj).length / 4)\n    : 0;\n  const dispatch = useDispatch();\n  const firstCellRef = useRef();\n  const cellIndex = useCellIndex();\n  const menuCoordinates = useCellMenuCoordinates();\n  const open = useCellPopupOpen();\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        if (firstCellRef.current) {\n          firstCellRef.current.focus();\n        }\n      }, 0);\n    }\n  }, [open]);\n\n  console.debug(\"CellPopupMenu rerender\");\n\n  return (\n    open && (\n      <PopupMenu\n        open={open}\n        left={menuCoordinates[0]}\n        top={menuCoordinates[1]}\n        onOpenChange={(isOpen) => {\n          dispatch(setCellPopupOpen(isOpen));\n        }}\n      >\n        <div className=\"flex\">\n          <div\n            className={`grid grid-rows-4 grid-cols-${tooltipColumns} grid-flow-col w-max max-h-48`}\n          >\n            {Object.values(soundObj).map((sound, index) => {\n              const onClick = (e) => {\n                dispatch(\n                  setSound({\n                    cellIndex,\n                    sectionIndex,\n                    sound,\n                  })\n                );\n              };\n\n              return (\n                <div\n                  ref={index === 0 ? firstCellRef : null}\n                  key={sound}\n                  className=\"p-3 hover:bg-blue-200 \"\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={onClick}\n                  onKeyPress={(e) => {\n                    onEnter(() => {})(e);\n                    onSpace(onClick)(e);\n                  }}\n                >\n                  {sound}\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"border-0 border-l-2 border-gray-200 grid grid-rows-4 grid-cols-1 grid-flow-col w-max max-h-48\">\n            <div className=\"p-3 hover:bg-blue-200 \">\n              <Comment />\n            </div>\n          </div>\n        </div>\n      </PopupMenu>\n    )\n  );\n};\n\nCellPopupMenu.propTypes = {};\n\nCellPopupMenu.defaultProps = {};\n\nexport default memo(CellPopupMenu);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport TaikoGrid from \"./Components/TaikoGrid\";\nimport PageContainer from \"./Components/PageContainer\";\nimport { store } from \"./redux/store\";\nimport CellPopupMenu from \"./Components/CellPopupMenu\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <PageContainer>\n          <TaikoGrid />\n          <CellPopupMenu />\n        </PageContainer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}